#+title: LKMP Getting Started

It is with great happiness I'm sharing that I was selected for the LKMP Fall 2025 and this is where I document the tools I'll be using for bug fixing. I'll update this as I learn.

* Baby Steps

My first plan is to find a bug reported by syzbot and fix it. I just want to get my feet wet.

** Typical Workflow

1. Build kernel with =CONFIG_DEBUG_INFO=y= =CONFIG_FRAME_POINTER=y=
2. Boot QEMU with =-s -S= and =nokaslr ftrace_dump_on_oops=
3. Attach GDB: =gdb vmlinux=, =target remote :1234=
4. Trace: =trace-cmd record ...= â†’ =trace-cmd report=
5. Measure scheduling: =perf sched record=, =perf sched latency sort max=
6. Enable watchdogs & hung task detectors
7. Sprinkle =trace_printk()= in suspected paths
8. For production: configure kdump, analyze dumps with crash

* Tools for Linux Kernel Bug Fixing

** 1. Core Runtime Debugging

*** QEMU
Virtual machine emulator for running custom kernels.

#+begin_src bash
qemu-system-x86_64 -kernel bzImage -append "console=ttyS0 root=/dev/sda nokaslr" -s -S -nographic
#+end_src

*** GDB
Commands: =target remote :1234=, =bt=, =info threads=, =b panic=, =list=

*** KGDB
Attach GDB to real hardware via serial/net.

** 2. Tracing & Timing

*** Ftrace
Built-in tracer. Useful params: =ftrace_dump_on_oops=, =traceoff_on_warning=, =panic_on_warn=1=

*** trace-cmd
#+begin_src bash
trace-cmd record -p function_graph -g kfree
trace-cmd report
#+end_src

*** perf
#+begin_src bash
perf sched record -- sleep 10
perf sched latency sort max
#+end_src

** 3. Hang & Stall Detectors

- Hard/Soft Lockup Watchdogs
- Hung Task Detector
- RCU Stall Detector

** 4. Sanitizers & Checkers

- KASAN: memory bugs
- KCSAN: data races
- LOCKDEP: locking correctness

** 5. Post-Mortem Debugging

- kdump/kexec + crash
- SysRq magic keys

** 6. Logging

- =printk=: traditional logging
- =trace_printk=: writes to ftrace buffer (faster)

* Essential Config

Kernel configs:
- =CONFIG_DEBUG_INFO=y=
- =CONFIG_FRAME_POINTER=y=
- =CONFIG_GDB_SCRIPTS=y=

Boot params:
- =nokaslr=
- =panic_on_warn=1=
- =ftrace_dump_on_oops=